"0","Counts <- matrix(0, nrow = nrow(Tree), ncol = 2)

# sco.sub = GSE145281[, GSE145281$seurat_clusters %in% c(10,11)]
responders.enrichment = nonresponders.enrichment = list()
responders.topgenes = nonresponders.topgenes = list()
seurat.clusters= unique(sco.adjusted$seurat_clusters) %>% as.character
for (i in 1:nrow(Tree)) {
    print(i)
    subtree <- as.vector(DFS(Tree, i))
    subtree <- which(cell_types %in% subtree) - 1
    print(subtree)
    old_ix <- as.integer(Tree[i,2]) - 1
    oldsubtree  <- which(cell_types %in% as.vector(DFS(Tree,old_ix))) - 1
    print(oldsubtree)
    sco.sub = sco.adjusted[,sco.adjusted$seurat_clusters %in% oldsubtree] %>%
     FindVariableFeatures(selection.method = ""vst"", nfeatures = 2000)
    
    ## Perform differential expression
    deg.curr = mydeg(sco.sub)
    deg.curr = deg.curr[padj<0.3]
  
    
    ## Find markers in children
    seurat.clust.cell.1 = subtree 
    Idents(sco.sub) = ifelse(sco.sub$seurat_clusters %in% seurat.clust.cell.1, 1 ,2) %>% as.factor
    markers.curr = FindAllMarkers(sco.sub, only.pos = TRUE, min.pct = 0.25, logfc.threshold = 0.25) ## this will give markers of both cell.1 (child1) and cell.2 (child2)
    markers.top  = markers.curr %>% group_by(cluster) %>% top_n(n = 700, wt = avg_logFC)
    term2gene  = markers.top %>%  as.data.table %>% 
    .[,.(term=cluster,gene=gene)] %>% as.data.frame
    
    # Make contingency table 
    a <- length(which(deg.curr[log2FoldChange > 0]$gene %in% term2gene[term2gene[,1] == 1,2]))
    b <- length(which(deg.curr[log2FoldChange < 0]$gene %in% term2gene[term2gene[,1] == 1,2]))
    

    c <- length(deg.curr[log2FoldChange > 0]$gene) - a
    d <- length(deg.curr[log2FoldChange < 0]$gene) - b
    
    C <- matrix(c(a,b,c,d), nrow = 2, ncol = 2, byrow = TRUE)
    responders.enrichment[[i]] <- fisher.test(C, alternative = ""greater"")$p.value
    nonresponders.enrichment[[i]] <- fisher.test(C, alternative = ""less"")$p.value
    print(C)
    
    print(responders.enrichment[[i]])
    print(nonresponders.enrichment[[i]])
    
    sco.sub = sco.adjusted[,sco.adjusted$seurat_clusters %in% subtree] %>%
     FindVariableFeatures(selection.method = ""vst"", nfeatures = 2000)
    ncells <- nrow(sco.sub@meta.data)
    Counts[i,1] <- nrow(sco.sub@meta.data[sco.sub@meta.data$Type == ""Blood"",])/ncells
    Counts[i,2] <- nrow(sco.sub@meta.data[sco.sub@meta.data$Type == ""Tumor"",])/ncells 
    
    ncells <- nrow(sco.sub@meta.data)
    Counts[i,1] <- nrow(sco.sub@meta.data[sco.sub@meta.data$response == 1,])/ncells
    Counts[i,2] <- nrow(sco.sub@meta.data[sco.sub@meta.data$response == 0,])/ncells 
    print(Counts[i,1])
    print(Counts[i,2]) 
    
    #Do differential expression 
    try({
      deg.curr = mydeg(sco.sub)
      responders.topgenes[[i]] <- deg.curr[log2FoldChange > 0]$gene[1]
      nonresponders.topgenes[[i]] <- deg.curr[log2FoldChange < 0]$gene[1]})
}
"
"1","[1]"
"1"," 1"
"1","
"
"1","[1]"
"1","  1"
"1","  2"
"1","  3"
"1","  4"
"1","  8"
"1"," 12"
"1","
"
"1"," [1]"
"1","  0"
"1","  1"
"1","  2"
"1","  3"
"1","  4"
"1","  5"
"1","  6"
"1","  7"
"1","  8"
"1","  9"
"1"," 10"
"1"," 11"
"1"," 12"
"1","
"
"2","Calculating gene variances"
"2","
"
"2","0%   10   20   30   40   50   60   70   80   90   100%
"
"2","[----|----|----|----|----|----|----|----|----|----|
"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","|
"
"2","Calculating feature variances of standardized and clipped values"
"2","
"
"2","0%   10   20   30   40   50   60   70   80   90   100%
"
"2","[----|----|----|----|----|----|----|----|----|----|
"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","|
"
"1",""
"1"," "
"1"," |                                                  |"
"1"," "
"1","0 % ~calculating  "
"1",""
"1"," "
"1"," |+                                                 |"
"1"," "
"1","1 % ~02m 30s      "
"2","
"
