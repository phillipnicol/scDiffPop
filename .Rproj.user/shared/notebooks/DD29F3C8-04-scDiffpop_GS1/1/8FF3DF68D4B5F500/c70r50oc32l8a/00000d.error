{"frames":[{"func":"FindAllMarkers(sco.sub, only.pos = TRUE, min.pct = 0.25, logfc.threshold = 0.25)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(expr = {\n    FindMarkers(object = object, assay = assay, ident.1 = if (is.null(x = node)) {\n        idents.all[i]\n    } ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"FindMarkers(object = object, assay = assay, ident.1 = if (is.null(x = node)) {\n    idents.all[i]\n} else {\n    tree ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"FindMarkers.Seurat(object = object, assay = assay, ident.1 = if (is.null(x = node)) {\n    idents.all[i]\n} else {\n    tree ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"FindMarkers(object = data.use, slot = data.slot, counts = counts, \n    cells.1 = ident.1, cells.2 = ident.2, features = features, \n    reduction = reduction, logfc.threshold = logfc.threshold, \n    test.use = test.use, min.pct = min.pct, min.diff.pct = min.diff.pct,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"FindMarkers.default(object = data.use, slot = data.slot, counts = counts, \n    cells.1 = ident.1, cells.2 = ident.2, features = features, \n    reduction = reduction, logfc.threshold = logfc.threshold, \n    test.use = test.use, min.pct = min.pct, min.diff.pct = min.diff.pct,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rowSums(x = data[features, cells.1, drop = FALSE] > thresh.min)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"data[features, cells.1, drop = FALSE] > thresh.min","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"data[features, cells.1, drop = FALSE] > thresh.min","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"extends(cl1, \"denseMatrix\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in get(as.character(FUN), mode = \"function\", envir = envir) : \n  object 'as.SimpleList' of mode 'function' was not found\n"}